Index: code/server/sv_ccmds.c
===================================================================
--- code/server/sv_ccmds.c	(revision 545)
+++ code/server/sv_ccmds.c	(working copy)
@@ -758,7 +758,90 @@
 	SV_Shutdown( "killserver" );
 }
 
+/*
+==================
+SV_ForceCvar_f_helper
 
+Called internally by SV_ForceCvar_f.
+==================
+*/
+static void SV_ForceCvar_f_helper( client_t *cl ) {
+	int		oldInfoLen;
+	int		newInfoLen;
+	qboolean	touchedUserinfo = qfalse;
+
+	// Who knows what would happen if we called the VM with a GAME_CLIENT_USERINFO_CHANGED
+	// when this client wasn't connected.
+	if (cl->state < CS_CONNECTED) {
+		return;
+	}
+
+	// First remove all keys; there might exist more than one in the userinfo.
+	oldInfoLen = strlen(cl->userinfo);
+	while (qtrue) {
+		Info_RemoveKey(cl->userinfo, Cmd_Argv(2));
+		newInfoLen = strlen(cl->userinfo);
+		if (oldInfoLen == newInfoLen) { break; } // userinfo wasn't modified.
+		oldInfoLen = newInfoLen;
+		touchedUserinfo = qtrue;
+	}
+
+	if (strlen(Cmd_Argv(3)) > 0) {
+		if (strlen(Cmd_Argv(2)) + strlen(Cmd_Argv(3)) + 2 + newInfoLen >= MAX_INFO_STRING) {
+			SV_DropClient(cl, "userinfo string length exceeded");
+			return;
+		}
+		Info_SetValueForKey(cl->userinfo, Cmd_Argv(2), Cmd_Argv(3));
+		touchedUserinfo = qtrue;
+	}
+
+	if (touchedUserinfo) {
+		SV_UserinfoChanged(cl);
+		VM_Call(gvm, GAME_CLIENT_USERINFO_CHANGED, cl - svs.clients);
+	}
+}
+
+/*
+==================
+SV_ForceCvar_f
+
+Set a cvar for a user.
+==================
+*/
+static void SV_ForceCvar_f(void) {
+	client_t	*cl;
+	int		i;
+
+	// Make sure server is running.
+	if (!com_sv_running->integer) {
+		Com_Printf("Server is not running.\n");
+		return;
+	}
+
+	if (Cmd_Argc() != 4 || strlen(Cmd_Argv(2)) == 0) {
+		Com_Printf("Usage: forcecvar <player name> <cvar name> <cvar value>\nPlayer may be 'allbots'\n");
+		return;
+	}
+
+	cl = SV_GetPlayerByHandle();
+	if (!cl) {
+		if (!Q_stricmp(Cmd_Argv(1), "allbots")) {
+			for (i = 0, cl = svs.clients; i < sv_maxclients->integer; i++, cl++) {
+				if (!cl->state) {
+					continue;
+				}
+				if(cl->netchan.remoteAddress.type != NA_BOT) {
+					continue;
+				}
+				SV_ForceCvar_f_helper(cl);
+			}
+		}
+		return;
+	}
+
+	SV_ForceCvar_f_helper(cl);
+}
+
 ////////////////////////////////////////////////////
 // separator for forcecvar.patch and incognito.patch
 ////////////////////////////////////////////////////
@@ -801,6 +884,7 @@
 		Cmd_AddCommand ("tell", SV_ConTell_f);
 	}
 
+	Cmd_AddCommand("forcecvar", SV_ForceCvar_f);
 	////////////////////////////////////////////////////
 	// separator for forcecvar.patch and incognito.patch
 	////////////////////////////////////////////////////
